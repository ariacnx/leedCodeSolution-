/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        ArrayList<Integer> nums = new ArrayList<Integer>();
        ListNode current = head;
        while(current != null){
            nums.add(current.val);
            current = current.next;  
        }
        return helper(nums, 0, nums.size() - 1);
    }
    private boolean helper(ArrayList nums, int start, int end){
        if (start >= end){
            return true;
        }
        // compare start&end
        if (nums.get(start) == nums.get(end)){
            return helper(nums, start + 1, end - 1);
        } else {
            return false;
        }
    }
}
