/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeElements(ListNode head, int val) {
       if (head == null){
           return head;
       }
     while (head.val == val){
         if(head.next == null){
             head = null;
             return head;
         }
         head = head.next;
     }
        ListNode prev = head;
        ListNode current = head.next;
        
        while (current != null){
            if (current.val == val && current.next != null){
               current = prev.next.next;
               prev.next = prev.next.next;
            }
            else if (current.val == val && current.next == null){
                current = prev;
                current.next = null;
            }
            else if (current.val != val){
                prev = current;
                current = current.next;
               
            }
        
        }
    return head;
    }
}
