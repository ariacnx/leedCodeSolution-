
class Solution {
    public static int thirdMax(int[] nums) {
        int max1 = -2147483648;
        int max2 = -2147483648;
        int max3 = -2147483648;
        HashMap<Integer, Integer> map1 = new HashMap<Integer, Integer>();
        for (int i = 0; i < nums.length; i++){
            map1.put(nums[i],1);
        }
        
        for (int i: map1.keySet()){
            if (i >= max1){
                max3 = max2;
                max2 = max1;
                max1 = i;
            }
            else if (i >= max2){
                max3 = max2;
                max2 = i;
            }
            else if (i > max3){
                max3 = i;
            }
        }
        if (map1.size() == 2){
            return max1;
        }
        else if (map1.size() == 1){
            return max1;
        }
        return max3;    
    }            
}







class Solution {
    public int thirdMax(int[] nums) {
        int count = 0;
        int max = 0;
        int lastnumber = 0;
        int count3Case = 0;
        
        for (int i= 0; i < nums.length; i++){
    
            if (nums[i] != lastnumber){
                count++;
                lastnumber = nums[i];
                if(nums[i] > max && count < 3 ){
                    max = nums[i];
                }
            if (count == 3){
                //return lastnumber;
                //return nums[2];
                count3Case = nums[i];
            }
        }
         
    }
    if (count > 3){
        return nums[2];
        
    } 
    else if (count == 3){
        return count3Case;
    }
    return max;

}
}
