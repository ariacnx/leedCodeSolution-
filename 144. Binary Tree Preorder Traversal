class Solution {
    public List<Integer> preorderTraversal(TreeNode root) {
        List<Integer> ans = new LinkedList<Integer>();
	      preHelper(root,ans);
	      return ans;
    }
    public void preHelper(TreeNode root, List<Integer> ans) {
	    if(root==null) return;
	    ans.add(root.val);
	    preHelper(root.left,ans);
	    preHelper(root.right,ans);
    }

}


class Solution {
    public List<Integer> preorderTraversal(TreeNode root) {
        Stack<TreeNode> stack = new Stack<TreeNode>();
        ArrayList<Integer> ans = new ArrayList<Integer>();
        TreeNode curr = root;
        while(curr != null){
            ans.add(curr.val);
            if (curr.right != null){
                stack.push(curr.right);
                
            }
            curr = curr.left;
            if (curr == null && !stack.isEmpty()) {
			curr = stack.pop();
		}
        }
        return ans;
    }
        
}
